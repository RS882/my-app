{"version":3,"sources":["components/forms/TextareaForm/TextareaForm.jsx","components/forms/TextareaForm/TextareaForm.module.css","components/HOC/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","utilits/validators.js","components/common/formControl/formControl.jsx","css_style_for_all/button.module.css","components/common/formControl/formControl.module.css"],"names":["TextareaForm","props","formData","nameForm","newTextValue","maxLengthText","maxLength","onSubmit","values","form","addValue","resetFieldState","initialValues","render","handleSubmit","submitting","pristine","errors","component","Textarea","name","validate","composeValidators","required","onFocus","delValue","className","s","postsarea","btnS","button","button_width","disabled","Object","keys","length","buttonName","module","exports","withAuthRedirect","Component","connect","state","isAuth","auth","addRedirectLoginUrl","url","useLocation","useEffect","pathname","to","DialogItem","path","id","dialog","activeClassName","activeLink","link","style","background","avatar","Message","marginL","test","author","marginLeft","message","toLowerCase","Dialogs","dialogElements","dialogs","map","d","messageElements","messeges","m","dialogsItem","masseges","delMessageValue","addMessage","newTextMessage","compose","dialogsPage","value","undefined","emailValid","validators","reduce","error","validator","FormControl","input","meta","FormType","onBlur","onChange","hasError","touched","formBox","border","resize","Input"],"mappings":"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","file":"static/js/5.15618524.chunk.js","sourcesContent":["import { Field, Form } from \"react-final-form\";\r\nimport { composeValidators, maxLength } from \"../../../utilits/validators\";\r\nimport { Textarea } from './../../common/formControl/formControl';\r\nimport { required } from './../../../utilits/validators';\r\nimport s from './TextareaForm.module.css';\r\nimport btnS from './../../../css_style_for_all/button.module.css';\r\n\r\nconst TextareaForm = (props) => {\r\n\tconst formData = { [props.nameForm]: props.newTextValue, }\r\n\tconst maxLengthText = maxLength(props.maxLengthText)\r\n\treturn (\r\n\t\t<Form\r\n\t\t\tonSubmit={(values, form) => {\r\n\t\t\t\tprops.addValue(values[props.nameForm])\r\n\t\t\t\tform.resetFieldState(props.nameForm)\r\n\t\t\t}}\r\n\t\t\tinitialValues={{ ...formData }}\r\n\t\t\trender={({ handleSubmit, submitting, pristine, errors }) =>\r\n\t\t\t\t<form onSubmit={handleSubmit} >\r\n\t\t\t\t\t<Field\r\n\t\t\t\t\t\tcomponent={Textarea}\r\n\t\t\t\t\t\tname={props.nameForm}\r\n\t\t\t\t\t\tvalidate={composeValidators(required, maxLengthText)}\r\n\t\t\t\t\t\tonFocus={props.delValue}\r\n\t\t\t\t\t\tclassName={s.postsarea}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName={`${btnS.button} ${s.button_width}`}\r\n\t\t\t\t\t\tdisabled={submitting || pristine || Object.keys(errors).length > 0}\r\n\t\t\t\t\t>{props.buttonName}</button>\r\n\t\t\t\t</form>\r\n\r\n\t\t\t}\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport default TextareaForm","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsarea\":\"TextareaForm_postsarea__X-k7R\",\"button_width\":\"TextareaForm_button_width__luoyf\"};","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, useLocation } from 'react-router-dom';\r\n\r\nimport { addRedirectLoginUrl } from '../../redux/authReducer';\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\tconst RedirectComponent = (props) => {\r\n\t\tconst url = useLocation();\r\n\t\tuseEffect(() => (!props.isAuth) && props.addRedirectLoginUrl(url.pathname))\r\n\t\tif (!props.isAuth) return <Redirect to='/login' />\r\n\t\treturn <Component {...props} />\r\n\t}\r\n\r\n\tconst mapStateToPropsForRedirect = (state) => ({\r\n\t\tisAuth: state.auth.isAuth,\r\n\t})\r\n\r\n\treturn connect(mapStateToPropsForRedirect, { addRedirectLoginUrl })(RedirectComponent)\r\n\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__2TkQk\",\"activeLink\":\"DialogItem_activeLink__3fLbI\",\"avatar\":\"DialogItem_avatar__3x-Qz\",\"link\":\"DialogItem_link__1gklJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3UR5s\",\"dialogsItem\":\"Dialogs_dialogsItem__2HwL9\",\"masseges\":\"Dialogs_masseges__2mzfL\",\"postsarea\":\"Dialogs_postsarea__3xilW\",\"inputpost\":\"Dialogs_inputpost__1wmYM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1vZO2\",\"name\":\"Message_name__3J-Qr\"};","import { NavLink } from 'react-router-dom';\r\nimport s from './DialogItem.module.css';\r\nimport React from 'react';\r\n\r\nconst DialogItem = (props) => {\r\n\tconst path = `/dialogs/${props.id}`;\r\n\r\n\treturn (\r\n\t\t<li className={s.dialog}>\r\n\r\n\t\t\t<NavLink to={path} activeClassName={s.activeLink} className={s.link}>\r\n\t\t\t\t<div style={{ background: props.avatar }} className={s.avatar}></div>\r\n\t\t\t\t{props.name}</NavLink>\r\n\t\t</li>\r\n\t)\r\n}\r\n\r\n\r\nexport default DialogItem;","\r\nimport s from './Message.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n\tconst marginL = (/me/i).test(props.author) ? 30 : 0;\r\n\r\n\r\n\treturn (\r\n\t\t<div style={{ marginLeft: marginL + '%' }} className={s.message} >\r\n\t\t\t<div className={s.name}>\r\n\t\t\t\t{marginL === 30 ? props.author.toLowerCase() : props.author}\r\n\t\t\t</div>\r\n\t\t\t<div>{props.message}</div>\r\n\t\t</div >\r\n\t)\r\n}\r\n\r\n\r\nexport default Message;","import DialogItem from './DialogItem/DialogItem';\r\nimport s from './Dialogs.module.css';\r\nimport Message from './Message/Message';\r\nimport React from 'react';\r\nimport TextareaForm from './../forms/TextareaForm/TextareaForm';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\tconst dialogElements = props.dialogs.map(d => <DialogItem name={d.name} id={d.id} avatar={d.avatar} key={d.id} />);\r\n\tconst messageElements = props.messeges.map(m => <Message message={m.message} author={m.author} key={m.id} />);\r\n\t//newMessageElement = React.createRef(), - не рекомендцутся использовать\r\n\r\n\r\n\treturn (\r\n\t\t<div className={s.dialogs}>\r\n\t\t\t<ul className={s.dialogsItem}>\r\n\t\t\t\t{dialogElements}\r\n\t\t\t</ul>\r\n\t\t\t<div className={s.masseges}>\r\n\t\t\t\t{messageElements}\r\n\t\t\t\t<TextareaForm\r\n\t\t\t\t\tdelValue={props.delMessageValue}\r\n\t\t\t\t\taddValue={props.addMessage}\r\n\t\t\t\t\tnewTextValue={props.newTextMessage}\r\n\t\t\t\t\tnameForm={`newTextMessage`}\r\n\t\t\t\t\tmaxLengthText={50}\r\n\t\t\t\t\tbuttonName={`send`}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default Dialogs;","\r\n\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { addMessage, delMessageValue } from './../../redux/dialogsReducer';\r\nimport { withAuthRedirect } from '../HOC/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n// const DialogsContainer = () => {\r\n\r\n\r\n\r\n// \treturn (\r\n\r\n// \t\t<StoreContext.Consumer>\r\n// \t\t\t{(store) => {\r\n// \t\t\t\tconst state = store.getState().dialogsPage;\r\n\r\n// \t\t\t\tconst onMessage = () => store.dispatch(addMessageActionCreation()),\r\n// \t\t\t\t\tonMessageChange = (text) => store.dispatch(updateNewMessageTextActionCreation(text)),\r\n// \t\t\t\t\tonDelMessageValue = () => store.dispatch(delMessageValueActionCreation());\r\n// \t\t\t\treturn (\r\n// \t\t\t\t\t<Dialogs\r\n// \t\t\t\t\t\tonMessage={onMessage}\r\n// \t\t\t\t\t\tonMessageChange={onMessageChange}\r\n// \t\t\t\t\t\tonDelMessageValue={onDelMessageValue}\r\n// \t\t\t\t\t\tdialogs={state.dialogs}\r\n// \t\t\t\t\t\tmesseges={state.messeges}\r\n// \t\t\t\t\t\tnewTextMessage={state.newTextMessage}\r\n// \t\t\t\t\t/>\r\n// \t\t\t\t)\r\n// \t\t\t}\r\n// \t\t\t}\r\n\r\n// \t\t</StoreContext.Consumer>\r\n// \t);\r\n// }\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tdialogs: state.dialogsPage.dialogs,\r\n\t\tmesseges: state.dialogsPage.messeges,\r\n\t\tnewTextMessage: state.dialogsPage.newTextMessage,\r\n\t}\r\n};\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps,\r\n\t\t{ addMessage, delMessageValue }),\r\n\twithAuthRedirect\r\n)(Dialogs)\r\n","export const required = (value) => (value ? undefined : `This field is required`)\r\n\r\nexport const maxLength = (maxLength) => (value) =>\r\n\t(value && value.length <= maxLength) ? undefined :\r\n\t\t`Max length is not more than ${maxLength}`;\r\n\r\nexport const mustBeNumber = (value) => (isNaN(value) ?\r\n\t`Must be a number` : undefined);\r\n\r\n\r\nexport const minValue = (min) => (value) =>\r\n\tisNaN(value) || value >= min ? undefined :\r\n\t\t`Should be greater than ${min}`;\r\n\r\nexport const emailValid = (value) =>\r\n\t(/^([A-Za-z0-9_\\-.])+@([A-Za-z0-9_\\-.])+\\.([A-Za-z]{2,4})$/).test(value) ?\r\n\t\tundefined : `Please enter a valid e-mail`;\r\n\r\n\r\n\r\nexport const composeValidators = (...validators) => (value) =>\r\n\tvalidators.reduce((error, validator) => error || validator(value), undefined);","import s from './formControl.module.css';\r\n\r\nconst FormControl = ({ input, meta, FormType, ...props }) => {\r\n\tif (props.onFocus) input.onFocus = props.onFocus;\r\n\tif (props.onBlur) input.onBlur = props.onBlur;\r\n\tif (props.onChange) input.onChange = props.onChange;\r\n\tconst hasError = meta.error && meta.touched;\r\n\r\n\r\n\treturn (\r\n\t\t<div className={s.formBox}>\r\n\t\t\t<div >\r\n\t\t\t\t<FormType {...props} {...input} style={{ border: hasError && '2px solid red', resize: 'none', }} />\r\n\t\t\t</div>\r\n\t\t\t<div className={s.error}>\r\n\t\t\t\t{hasError && <span>{meta.error}</span>}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport const Textarea = (props) => <FormControl {...props} FormType=\"textarea\" />\r\n\r\nexport const Input = (props) => <FormControl {...props} FormType=\"input\" />\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__29XUN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"formControl_error__SZimR\",\"formBox\":\"formControl_formBox__irCrc\"};"],"sourceRoot":""}